# singularity build --fakeroot --bind $(realpath openssl-3.4.1):/tmp/openssl-3.4.1 cluster/pytorch-2503.sif pytorch-2503.def
Bootstrap: docker
From: nvcr.io/nvidia/pytorch:25.03-py3

%post
    set -eux

    echo "==> Installing dependencies"
    apt-get update
    apt-get install -y --no-install-recommends \
        build-essential \
        ca-certificates \
        curl \
        wget \
        gnutls-bin \
        tar \
        xz-utils \
        m4 \
        perl \
        libssl-dev

    echo "==> Ensuring entropy is available"
    if ! [ -e /dev/urandom ]; then
        echo "    /dev/urandom missing — creating fallback"
        mknod -m 444 /dev/urandom c 1 9 || true
    fi

    cd /tmp

    if ! [ -d openssl-3.4.1 ]; then
        if ! [ -f openssl-3.4.1.tar.gz ]; then
            echo "==> Downloading OpenSSL 3.4.1"
            wget http://github.com/openssl/openssl/releases/download/openssl-3.4.1/openssl-3.4.1.tar.gz \
                -O openssl-3.4.1.tar.gz --no-check-certificate || {
                echo "     Download failed — please bind the tarball into the container at /tmp/openssl-3.4.1.tar.gz"
                exit 1
            }
        else
            echo "==> Found OpenSSL tarball, skipping download"
        fi
        echo "==> Extracting OpenSSL"
        tar -xf openssl-3.4.1.tar.gz
    else
        echo "==> Found existing OpenSSL source directory"
    fi

    cd openssl-3.4.1

    echo "==> Building OpenSSL"
    ./config --prefix=/opt/openssl --openssldir=/opt/openssl/ssl
    make -j8
    echo "==> Installing OpenSSL"
    make install_sw

    echo "==> Copying and enabling OpenSSL default provider config"
    mkdir -p /opt/openssl/ssl
    cp ./apps/openssl.cnf /opt/openssl/ssl/openssl.cnf
    sed -i 's/^# *activate = 1/activate = 1/' /opt/openssl/ssl/openssl.cnf

    echo "==> Cleaning up"
    apt-get remove --purge -y build-essential libssl-dev m4 perl
    apt-get autoremove -y
    apt-get clean
    rm -rf /var/lib/apt/lists/* # /tmp/*

%environment
    export PATH=/opt/openssl/bin:$PATH
    export LD_LIBRARY_PATH=/opt/openssl/lib64:$LD_LIBRARY_PATH
    export OPENSSL_CONF=/opt/openssl/ssl/openssl.cnf
    export OPENSSL_MODULES=/opt/openssl/lib64/ossl-modules

%test
    echo "==> OpenSSL version:"
    openssl version

    echo "==> Python SSL context test:"
    python3 -c "import ssl; print(ssl.create_default_context())"

%labels
    Author Marco Christiani
    Description PyTorch 25.03 with patched OpenSSL 3.4.1 and working pip
